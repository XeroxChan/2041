#!/usr/bin/env python3
import sys
import argparse
import re
parser = argparse.ArgumentParser()
parser.add_argument("regex")
parser.add_argument("-n", "--replace_n_matches", default=1, type=int)

args = parser.parse_args()
patterns = []
patternFound = False
command = list(args.regex)[-1]
if len(args.regex) > 2 and args.regex[0] == args.regex[-2]:
    patterns = args.regex.split(args.regex[0])
    patternFound = True


 
def doQCommand(line, args, counter, patterns):
    print(line, end='')

    if patternFound:
        if re.search(pattern[0], line):
            return False
    else:
        address = int(args.regex[0:-1])
        if counter == address:
            return False
    counter += 1
    return True

def doPCommand(line, args):
    if patternFound:
        

lines=""
counter = 1
while(True):
    for line in sys.stdin.readlines():
        if line == '':
            break
        
        lines += line. rstrip('\n')
        
        if (command == 'q'):
            if not doQCommand(line, args, counter, patterns):
                break
        if (command == 'p'):
            if not doPCommand(line, args, counter, patterns):
                break       

    sys.exit(0)
